# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Page {
  id: String!
  user: User!
  content: JSON
  slug: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: String!
  name: String!
  email: String
  avatar: String
  provider: ProviderType!
  providerId: String!
  pageId: String!
  page: Page!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ProviderType {
  GITHUB
}

type File {
  id: String!
  ownerId: String
  owner: User
  key: String!
  isPrivate: Boolean!
}

type UploadUrl {
  url: String!
  key: String!
}

type School {
  id: Int!
  name: String!
  logo: String!
}

type CursorPageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  countCurrent: Int!
  countTotal: Int!
  countBefore: Int!
  countNext: Int!
  startCursor: String!
  endCursor: String!
}

type CursorPaginatedSchool {
  edges: [SchoolCursorEdge!]
  pageInfo: CursorPageInfo
}

type SchoolCursorEdge {
  node: School!
  cursor: String!
}

type Query {
  me: User!
  generateUploadPath(type: UploadType!, filename: String!): UploadUrl!
  getSchoolsByCursor(filter: SchoolFilterInput, first: Int, after: String, last: Int, before: String): CursorPaginatedSchool!
}

enum UploadType {
  PROFILE
  PROJECT
  EXPERIENCE
}

input SchoolFilterInput {
  keyword: String!
}

type Mutation {
  updatePage(fields: UpdatePageInput!): Page!
  createFile(isPrivate: Boolean = false, key: String!): File!
}

input UpdatePageInput {
  content: JSON
}
